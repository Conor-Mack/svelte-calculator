{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\src\\App.svelte",
    "..\\..\\src\\Button.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount, afterUpdate } from \"svelte\";\n\n  import Button from \"./Button.svelte\";\n\n  const operatorMap = [\"+\", \"-\", \"*\", \"/\", \"=\"];\n  const numericalMap = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\"];\n\n  let equalsPressed = false;\n  let expression = \"\";\n  let expressionEquals = \"\";\n  let value = \"0\";\n\n  let screen;\n\n  afterUpdate(() => {\n    handleScreenScroll();\n  });\n\n  function handleScreenScroll() {\n    if (screen.scrollWidth > 550) {\n      screen.style.overflowX = \"scroll\";\n      screen.scrollTo(screen.scrollWidth, 0);\n    } else {\n      screen.style.overflowX = \"auto\";\n    }\n  }\n\n  function isValidExpression(exp) {\n    return /^(?:\\d+[+\\-*\\/]|\\d+\\.\\d+[+\\-*\\/]|\\-\\d+[+\\-*\\/]|\\.\\d+[+\\-*\\/])+(?:(?<=[\\+\\*\\/])\\-\\d+|\\.\\d+|\\d+|\\d+\\.\\d+)$/.test(\n      exp\n    );\n  }\n\n  function onNumericalKeyPress(v) {\n    value === \"0\" ? (value = v) : (value += v);\n    expression += v;\n  }\n\n  function clearEqualsPressed() {\n    if (equalsPressed) {\n      equalsPressed = false;\n    }\n  }\n\n  function onBackKeyPress() {\n    clearEqualsPressed();\n\n    if (expression.length > 1 && isValidOperator) {\n      //remove last char\n      expression = expression.substring(0, expression.length - 1);\n\n      //Another check to make sure the expression stll has multiple chars after initial removal\n      if (expression.length > 1) {\n        let opsInExpression = expression.match(/\\+|\\-|\\*|\\//g);\n        let valueFromExp;\n\n        //Check that expression only has one complete number and no other  operators\n        if (\n          !!opsInExpression &&\n          (opsInExpression.length === 1 && expression[0] === \"-\")\n        ) {\n          value = expression;\n        } else {\n          value = expression.match(/(\\-\\d+$|\\d+$)/g)[0];\n        }\n      } else {\n        value = expression;\n      }\n    } else {\n      if (value.length > 1) {\n        value = value.substring(0, value.length - 1);\n      } else {\n        value = \"0\";\n      }\n      expression = expression.substring(0, expression.length - 1);\n    }\n  }\n\n  function evaluateExpression() {\n    //avoiding eval by using function constructor\n    let ev = new Function(`return ${expression}`);\n    expressionEquals = ev();\n  }\n\n  function onEqualsPress() {\n    if (isValidExpression(expression)) {\n      equalsPressed = true;\n      evaluateExpression();\n    }\n  }\n\n  function onClearKeyPress() {\n    value = \"0\";\n    expression = \"\";\n    expressionEquals = \"\";\n    clearEqualsPressed();\n  }\n\n  function handleKeyPresses(event) {\n    if (operatorMap.includes(event.key)) {\n      onOperatorKeyPress(event.key);\n    } else if (numericalMap.includes(event.key)) {\n      onNumericalKeyPress(event.key);\n    } else if (event.key === \"Backspace\") {\n      onBackKeyPress();\n    } else if (event.key === \"Escape\") {\n      onClearKeyPress();\n    } else if (event.key === \"Enter\") {\n      onEqualsPress();\n    }\n  }\n\n  function onOperatorKeyPress(operator) {\n    clearEqualsPressed();\n\n    if (value === \"0\" && operator === \"-\") {\n      value = operator;\n      expression += operator;\n    } else if (value !== \"0\" && !lastCharIsOperator) {\n      expression += operator;\n      value = \"0\";\n    }\n  }\n\n  $: isValidOperator = /(?<![\\*\\/\\+\\-])[\\*\\/\\+\\-]$/.test(expression);\n\n  $: lastCharIsOperator = operatorMap.includes(\n    expression[expression.length - 1]\n  );\n\n  $: roundedEquals = /\\./.test(expressionEquals)\n    ? Number(expressionEquals).toFixed(2)\n    : expressionEquals;\n\n  $: isValidExpression(expression)\n    ? evaluateExpression()\n    : (expressionEquals = \"\");\n\n  $: expressionWithEntities = expression.replace(\n    /(?:\\*)|(?:\\/)|(?:\\+)|(?:\\-)/g,\n    match => {\n      if (match === \"*\") {\n        return \" &times; \";\n      } else if (match === \"/\") {\n        return \" &divide; \";\n      } else if (match === \"+\") {\n        return \" &plus; \";\n      } else if (match === \"-\") {\n        return \" &minus; \";\n      } else {\n        return match;\n      }\n    }\n  );\n</script>\n\n<style>\n  h4 {\n    color: #808090;\n  }\n\n  .container {\n    display: flex;\n    flex-flow: row nowrap;\n    width: 100%;\n    height: 100%;\n    background: #ffddab;\n    justify-content: center;\n    align-items: center;\n  }\n\n  main {\n    display: flex;\n    flex-direction: column;\n    width: 550px;\n    height: 700px;\n    margin-top: -40px;\n    padding: 10px;\n    background: #cdd1d4;\n    border: 2px solid #808090;\n    box-shadow: 1px 2px 9px 2px #808090;\n  }\n\n  .screen {\n    flex: 0 0 auto;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-template-rows: 30px auto;\n    width: 550px;\n    height: 85px;\n    border: 2px solid #808090;\n    border-radius: 5px;\n    overflow-y: hidden;\n    overflow-x: scroll;\n    background: #ffffff;\n  }\n\n  ::-webkit-scrollbar {\n    height: 10px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #a0a3a7;\n    border-radius: 10px;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n\n  .exp-text {\n    text-align: end;\n  }\n\n  .val {\n    text-align: end;\n    grid-column: 1 / -1;\n  }\n\n  .button-container {\n    margin-top: 10px;\n    flex: 1 1 auto;\n    display: grid;\n    grid-gap: 5px;\n    grid-template-columns: 3fr 1fr;\n  }\n\n  .action-buttons {\n    display: grid;\n    grid-gap: 5px;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(5, 1fr);\n  }\n\n  .arithmetic-buttons {\n    display: grid;\n    grid-gap: 5px;\n    grid-template-rows: repeat(5, 1fr);\n  }\n\n  @media screen and (max-height: 780px) {\n    main {\n      margin-top: 0px;\n    }\n  }\n</style>\n\n<svelte:window on:keydown={handleKeyPresses} />\n\n<div class=\"container\">\n  <main>\n\n    <div bind:this={screen} class=\"screen\">\n\n      <div class=\"exp-text\">\n        <h4>\n          {@html expressionWithEntities}\n        </h4>\n      </div>\n      <div class=\"exp-sum\">\n        {#if equalsPressed}\n          <h4>=</h4>\n        {:else if !!expressionEquals}\n          <h4>{`= ${roundedEquals}`}</h4>\n        {/if}\n      </div>\n      <div class=\"val\">\n        <h1>{equalsPressed ? expressionEquals : value}</h1>\n      </div>\n\n    </div>\n\n    <div class=\"button-container\">\n\n      <div class=\"action-buttons\">\n        <Button onClick={() => onNumericalKeyPress('1')}>1</Button>\n        <Button onClick={() => onNumericalKeyPress('2')}>2</Button>\n        <Button onClick={() => onNumericalKeyPress('3')}>3</Button>\n        <Button onClick={() => onNumericalKeyPress('4')}>4</Button>\n        <Button onClick={() => onNumericalKeyPress('5')}>5</Button>\n        <Button onClick={() => onNumericalKeyPress('6')}>6</Button>\n        <Button onClick={() => onNumericalKeyPress('7')}>7</Button>\n        <Button onClick={() => onNumericalKeyPress('8')}>8</Button>\n        <Button onClick={() => onNumericalKeyPress('9')}>9</Button>\n        <Button onClick={() => onNumericalKeyPress('.')}>.</Button>\n        <Button onClick={() => onNumericalKeyPress('0')}>0</Button>\n        <Button type=\"action\" onClick={() => onBackKeyPress()}>&crarr;</Button>\n        <Button type=\"action\" spanRow onClick={() => onClearKeyPress()}>\n          CLEAR\n        </Button>\n      </div>\n      <div class=\"arithmetic-buttons\">\n        <Button type=\"operator\" onClick={() => onOperatorKeyPress('+')}>\n          &plus;\n        </Button>\n        <Button type=\"operator\" onClick={() => onOperatorKeyPress('-')}>\n          &minus;\n        </Button>\n        <Button type=\"operator\" onClick={() => onOperatorKeyPress('*')}>\n          &times;\n        </Button>\n        <Button type=\"operator\" onClick={() => onOperatorKeyPress('/')}>\n          &divide;\n        </Button>\n        <Button type=\"operator\" onClick={() => onEqualsPress()}>=</Button>\n      </div>\n\n    </div>\n  </main>\n</div>\n",
    "<script>\r\n  export let onClick = () => {};\r\n  export let spanRow = false;\r\n  export let type = \"number\";\r\n</script>\r\n\r\n<style>\r\n  .spanRow {\r\n    grid-column: 1 / -1;\r\n  }\r\n\r\n  .number {\r\n    background-color: #000000db;\r\n  }\r\n\r\n  .operator {\r\n    background-color: #808080;\r\n  }\r\n\r\n  .action {\r\n    background-color: #e66108;\r\n  }\r\n\r\n  h2 {\r\n    color: #fff;\r\n  }\r\n</style>\r\n\r\n<button class={type} class:spanRow on:click={onClick}>\r\n  <h2>\r\n    <slot>¯\\_(ツ)_/¯</slot>\r\n  </h2>\r\n</button>\r\n"
  ],
  "names": [],
  "mappings": "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"
}